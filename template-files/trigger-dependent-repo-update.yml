# =============================================================================
# This workflow triggers automated updates in dependent repositories
# Add the update-tscircuit-package.yml workflow to the dependent repository, for this to work.
# =============================================================================

name: Create Automated PR

on:
  push:
    branches:
      - main
    paths:
      - 'lib/**'
      - 'src/**'
      - 'package.json'
      - 'bun.lock'
      - 'yarn.lock'
      - 'README.md'
      
  workflow_dispatch:

env:
  # CONFIGURATION: Change these values for your setup
  TARGET_REPO_NAME: "<TARGET_REPO_NAME>"  # for example: "eval"
  PACKAGE_NAME_TO_UPDATE: "<PACKAGE_NAME_TO_UPDATE>"  # for example: "@tscircuit/core"
  
  # Default values (usually don't need to change these)
  TARGET_REPO_OWNER: "tscircuit"
  TARGET_WORKFLOW_FILE: "update-tscircuit-package.yml"
  TRIGGER_BRANCH: "main"
  GITHUB_TOKEN_SECRET: "TSCIRCUIT_BOT_GITHUB_TOKEN"

jobs:
  trigger-dependent-update:
    name: Trigger Dependent Repository Update
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger workflow in dependent repository
        run: |
          echo "Triggering update workflow in ${{ env.TARGET_REPO_OWNER }}/${{ env.TARGET_REPO_NAME }}"
          echo "Package to update: ${{ env.PACKAGE_NAME_TO_UPDATE }}"
          
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets[env.GITHUB_TOKEN_SECRET] }}" \
            -H "User-Agent: GitHub-Actions-Workflow" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ env.TARGET_REPO_OWNER }}/${{ env.TARGET_REPO_NAME }}/actions/workflows/${{ env.TARGET_WORKFLOW_FILE }}/dispatches" \
            -d "{\"ref\":\"${{ env.TRIGGER_BRANCH }}\",\"inputs\":{\"package_name\":\"${{ env.PACKAGE_NAME_TO_UPDATE }}\"}}"
            
          if [ $? -eq 0 ]; then
            echo "Successfully triggered workflow in ${{ env.TARGET_REPO_OWNER }}/${{ env.TARGET_REPO_NAME }}"
            echo "Package ${{ env.PACKAGE_NAME_TO_UPDATE }} will be updated"
          else
            echo "Failed to trigger workflow"
            exit 1
          fi